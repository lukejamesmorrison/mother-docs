import{_ as s,c as a,d as e,o}from"./app-WBceOhT5.js";const t={};function c(i,n){return o(),a("div",null,n[0]||(n[0]=[e(`<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h1><p>Mother manages both the Programmable Block&#39;s Custom Data, as well as the Custom Data on each block allowing players to localize their configurations while continuing to make use of Mother other capbilities.</p><h2 id="accessing-mother-configuration" tabindex="-1"><a class="header-anchor" href="#accessing-mother-configuration"><span>Accessing Mother configuration</span></a></h2><p>Mother is primarily customized via the Custom Data field on the Programmable Block. For example, we can easily get a configuration value from it&#39;s <code>section</code> (general) and <code>key</code> (debug):</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token class-name"><span class="token keyword">bool</span></span> IsDebugMode <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Configuration<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;general.debug&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="accessing-block-configuration" tabindex="-1"><a class="header-anchor" href="#accessing-block-configuration"><span>Accessing Block configuration</span></a></h2><p>There are many instances where it is useful to access block-level configuration:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"></span>
<span class="line"><span class="token comment">// get block from Block Catalogue</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">void</span></span> MapScreen <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>BlockCatalogue<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetBlocks</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IMyTextPanel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>block <span class="token operator">=&gt;</span> block<span class="token punctuation">.</span>CustomName <span class="token operator">==</span> <span class="token string">&quot;Map Display&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// get the block&#39;s configuration</span></span>
<span class="line"><span class="token class-name">MyIni</span> blockConfig <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>BlockCatalogue<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetBlockConfiguration</span><span class="token punctuation">(</span>MapScreen<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// get scale</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">string</span></span> scale <span class="token operator">=</span> blockConfig<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;general&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;scale&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="defining-hooks" tabindex="-1"><a class="header-anchor" href="#defining-hooks"><span>Defining Hooks</span></a></h2><p>Hooks allow an interface for developers to trigger actions when specific block actions occur via Mother.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="AirlockDoor &gt; Custom Data"><span>AirlockDoor &gt; Custom Data</span></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">[hooks]</span>
<span class="line">onOpen=wait 10; door/close this;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>You can target a hook on a block using the <code>RunHook</code> method:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="AirlockModule.cs"><span>AirlockModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token comment">// run hook for door (block)</span></span>
<span class="line">Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>BlockCatalogue<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RunHook</span><span class="token punctuation">(</span>airlockDoor<span class="token punctuation">,</span> <span class="token string">&quot;onOpen&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div>`,13)]))}const l=s(t,[["render",c],["__file","Configuration.html.vue"]]),u=JSON.parse('{"path":"/Framework/Developer/CoreModules/Configuration.html","title":"Configuration","lang":"en-US","frontmatter":{},"git":{"updatedTime":1744758881000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":2}],"changelog":[{"hash":"d4c81fc8211f49ec3f9c79e45ca84998be0dbdb3","time":1744758881000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Add more module pages"},{"hash":"db312309835110752ea2b209f7c3efbf6e7d9264","time":1744758309000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"dev initial commit"}]},"filePathRelative":"Framework/Developer/CoreModules/Configuration.md"}');export{l as comp,u as data};
