import{_ as s,c as n,d as e,g as o}from"./app-DGHH2Nmc.js";const t={};function i(c,a){return o(),n("div",null,a[0]||(a[0]=[e(`<h1 id="command-bus" tabindex="-1"><a class="header-anchor" href="#command-bus"><span>Command Bus</span></a></h1><p>The Command Bus handles command execution for Mother. Modules should register commands in the <code>Boot()</code> method to expose them to the player.</p><h2 id="registering-a-command" tabindex="-1"><a class="header-anchor" href="#registering-a-command"><span>Registering a Command</span></a></h2><p>All commands should implement the <code>IModuleCommand</code> interface.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="LightModule.cs"><span>LightModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">IModuleCommand</span> setLightColorCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SetLightColorCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">RegisterCommand</span><span class="token punctuation">(</span>setLightColorCommand<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="running-a-command" tabindex="-1"><a class="header-anchor" href="#running-a-command"><span>Running a Command</span></a></h2><p>If you would like to run a command from it&#39;s raw command string, you can use the <code>RunTerminalCommand()</code> method:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="LightModule.cs"><span>LightModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line">Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CommandBus<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">RunTerminalCommand</span><span class="token punctuation">(</span><span class="token string">&quot;light/color HangarLights green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div>`,8)]))}const p=s(t,[["render",i]]),r=JSON.parse('{"path":"/Framework/Developer/CoreModules/CommandBus.html","title":"Command Bus","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754690910000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":2},{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":2,"url":"https://github.com/lukejamesmorrison"}],"changelog":[{"hash":"effd9d96219e3b940efebaae7ff63d6eda576759","time":1754690910000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Major update to Core pages"},{"hash":"5d3b96ad4629035735d9d0f86b5aa99d0c5200c7","time":1753997755000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Ongoing updates"},{"hash":"656cfacdf436e6faca234cf77b83f77ed2c9c8d2","time":1751234971000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Finish first draft of framework documentation"},{"hash":"db312309835110752ea2b209f7c3efbf6e7d9264","time":1744758309000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"dev initial commit"}]},"filePathRelative":"Framework/Developer/CoreModules/CommandBus.md"}');export{p as comp,r as data};
