import{_ as p,c as r,a as s,d as a,b as u,e,w as o,r as l,o as c}from"./app-CkNRwY-u.js";const d={};function m(k,n){const t=l("RouteLink"),i=l("Mermaid");return c(),r("div",null,[n[17]||(n[17]=s("h1",{id:"framework",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#framework"},[s("span",null,"Framework")])],-1)),n[18]||(n[18]=s("p",null,[s("img",{src:"https://img.shields.io/badge/In_Development-red",alt:"In Development"})],-1)),s("p",null,[n[1]||(n[1]=e("Mother Core is a framework for developing custom Programmable Block scripts for Space Engineers. It enables you to build interoperable modules to suit the specific needs of your ship or station. ")),a(t,{to:"/IngameScript/IngameScript.html"},{default:o(()=>n[0]||(n[0]=[e("Mother OS")])),_:1}),n[2]||(n[2]=e(" is built with Mother Core and a collection of extension modules."))]),n[19]||(n[19]=s("p",null,"Get started with:",-1)),s("ol",null,[s("li",null,[a(t,{to:"/Framework/Developer/ExtensionModules/ExtensionModules.html"},{default:o(()=>n[3]||(n[3]=[e("Create an Extension Module")])),_:1})]),s("li",null,[a(t,{to:"/Framework/Developer/ExtensionModules/ExtensionModules.html#commands"},{default:o(()=>n[4]||(n[4]=[e("Creating a Custom Terminal Command")])),_:1})]),s("li",null,[a(t,{to:"/Framework/Developer/CoreModules/IntergridMessageService.html"},{default:o(()=>n[5]||(n[5]=[e("Sending and Receiving Messages")])),_:1})]),n[6]||(n[6]=s("li",null,"Schedule and Delay Actions",-1))]),n[20]||(n[20]=s("h2",{id:"overview",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#overview"},[s("span",null,"Overview")])],-1)),s("p",null,[n[8]||(n[8]=e("Scripts built with Mother Core depend on the ")),n[9]||(n[9]=s("a",{href:"https://github.com/malware-dev/MDK-SE/wiki/Sandbox.ModAPI.Ingame.MyGridProgram",target:"_blank",rel:"noopener noreferrer"},"Program",-1)),n[10]||(n[10]=e(" instance, and a collection of ")),a(t,{to:"/Framework/Developer/CoreModules/CoreModules.html"},{default:o(()=>n[7]||(n[7]=[e("Core Modules")])),_:1}),n[11]||(n[11]=e(". These core modules provide a wide range of functionality, including intergrid communication, event handling, and block management. Developers can add their own functionality via ")),n[12]||(n[12]=s("strong",null,"Extension Modules",-1)),n[13]||(n[13]=e("."))]),a(i,{id:"mermaid-40",code:"eJyFkUFrg0AQhe/+isUiXhoogdKSQw+a9hZaaOhFclizY1yiO7K7oSnV/95dNWYTLVGQcd733sxqEPx6hHDB9YLYipBQ51BCuCBhShWE907zi0pO0wKUUTu41SrJSyp/YixQWt9dFM0f58+91UXWcNRnLMuyCSZCyUCeqaf4wVwuWFIuov3Oqt8516cdW00ggy7ByhKYKxZcwBCcFnS7d1UFWxTMPcgofUCulhxlaZCaX3yTt7m9p5jJrBZrzLPxmiDwvJ2kVU7Wy7a/QvM7JJnNXuolVCCYIihq8iHRYGXi94W/cejE713vn/5mZI1RwgrZoYDEt7Ux2Rd1EdG6YiwrVMAIZjV5PWoQiqM4eYeGE9AmqEPaHeGfSf0gs9AVf3OE4/wD9fPTSw=="}),n[21]||(n[21]=s("h2",{id:"the-extension-module",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-extension-module"},[s("span",null,"The Extension Module")])],-1)),s("p",null,[n[15]||(n[15]=e("Developers can add new functionality to their program by creating an ")),a(t,{to:"/Framework/Developer/ExtensionModules/ExtensionModules.html"},{default:o(()=>n[14]||(n[14]=[e("Extension Module")])),_:1}),n[16]||(n[16]=e(". THese modules are registered at boot time. They may access Core Mdules directly and respond to changes when other modules emit events."))]),n[22]||(n[22]=u(`<div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="MissileGuidanceModule.cs">MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MissileGuidanceModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Boot the module</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Register custom terminal commands</span></span>
<span class="line">        <span class="token function">RegisterCommand</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">RegisterCommand</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DetonateCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Load relevant blocks from the grid</span></span>
<span class="line">        Thrusters <span class="token operator">=</span> Mother<span class="token punctuation">.</span>BlockCatalogue<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetBlocks</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IMyThrust<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Listen for events</span></span>
<span class="line">        <span class="token function">Subscribe</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ConnectorUnlockedEvent</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Run module every program cycle</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">UpdateThrusters</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1))])}const g=p(d,[["render",m],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/Framework/","title":"Framework","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"The Extension Module","slug":"the-extension-module","link":"#the-extension-module","children":[]}],"git":{"updatedTime":1744056546000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":2}],"changelog":[{"hash":"f894df28734323dfee730c0dd29c28fed9ffa424","time":1744056546000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"v0.2.10 Update"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/README.md"}');export{g as comp,f as data};
