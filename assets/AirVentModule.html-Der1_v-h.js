import{_ as r,c as l,a as s,d as o,b as a,w as i,r as d,o as p,e as t}from"./app-Duj2xXY1.js";const c={},u={class:"table-of-contents"};function m(v,e){const n=d("router-link");return p(),l("div",null,[e[4]||(e[4]=s("h1",{id:"air-vent-module",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#air-vent-module"},[s("span",null,"Air Vent Module")])],-1)),e[5]||(e[5]=s("p",null,"The air vent module allows players to control air vents for uses like airlocks and oxygen capture.",-1)),s("nav",u,[s("ul",null,[s("li",null,[a(n,{to:"#commands"},{default:i(()=>e[0]||(e[0]=[t("Commands")])),_:1}),s("ul",null,[s("li",null,[a(n,{to:"#pressurize"},{default:i(()=>e[1]||(e[1]=[t("pressurize")])),_:1})]),s("li",null,[a(n,{to:"#depressurize"},{default:i(()=>e[2]||(e[2]=[t("depressurize")])),_:1})])])]),s("li",null,[a(n,{to:"#hooks"},{default:i(()=>e[3]||(e[3]=[t("Hooks")])),_:1})])])]),e[6]||(e[6]=o(`<h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2><h3 id="pressurize" tabindex="-1"><a class="header-anchor" href="#pressurize"><span>pressurize</span></a></h3><p>Set the air vent to pressurize mode.</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line">vent/pressurize &lt;AirVent|Group&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Example</strong></p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line">vent/pressurize AirlockAirVent</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="depressurize" tabindex="-1"><a class="header-anchor" href="#depressurize"><span>depressurize</span></a></h3><p>Set the air vent to pressurize mode.</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line">vent/depressurize &lt;AirVent|Group&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Example</strong></p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line">vent/depressurize &quot;Atmosphere Intake Fan&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h2 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>Hooks</span></a></h2><p>The following hooks can be define in the block&#39;s Custom Data, and will be triggered when the corresponding command is called:</p><table><thead><tr><th>Key</th><th>Trigger</th></tr></thead><tbody><tr><td><code>onDepressurized</code></td><td>Activated when an air vent is in the <em>Depressurized</em> state.</td></tr><tr><td><code>onDepressurizing</code></td><td>Activated when an air vent is in the <em>Depressurized</em> state.</td></tr><tr><td><code>onPressurized</code></td><td>Activated when an air vent is in the <em>Pressurized</em> state.</td></tr><tr><td><code>onPressurizing</code></td><td>Activated when an air vent is in the <em>Pressurized</em> state.</td></tr></tbody></table><p><strong>Example</strong></p><p>Imagine our air vent is part of our airlock:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Main Airlock Air Vent &gt; Custom Data"><span>Main Airlock Air Vent &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">onDepressurizing</span><span class="token punctuation">=</span><span class="token value attr-value">light/color &quot;MainAirlockLight&quot; red;</span></span>
<span class="line"><span class="token key attr-name">onPressurized</span><span class="token punctuation">=</span><span class="token value attr-value">door/open &quot;MainAirlockInnerDoor&quot;;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>You can use <code>this</code> to refer to the block itself when targeting it from within its own custom data.</p></div><p>or</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Mother &gt; Custom Data"><span>Mother &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">&quot;Main Airlock Air Vent&quot;.onDepressurizing</span><span class="token punctuation">=</span></span>
<span class="line">| light/color &quot;MainAirlockLight&quot; red;</span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">ExternalAirVent.onPressurized</span><span class="token punctuation">=</span></span>
<span class="line">| screen/print &quot;Atmosphere Screen&quot; &quot;IN ATMOSPHERE&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,20))])}const b=r(c,[["render",m],["__file","AirVentModule.html.vue"]]),g=JSON.parse('{"path":"/IngameScript/Modules/Extension/AirVentModule.html","title":"Air Vent Module","lang":"en-US","frontmatter":{},"git":{"updatedTime":1745962941000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":2}],"changelog":[{"hash":"14dd98a0e86a3fe75bd3c7b78481fd4c549c7df4","time":1745962941000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"0.2.12 Update"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"IngameScript/Modules/Extension/AirVentModule.md"}');export{b as comp,g as data};
