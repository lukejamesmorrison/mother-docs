import{_ as o,c as l,a,d as i,b as n,w as r,f as d,g as c,e as t}from"./app-CUcsPTDl.js";const m={},u={class:"table-of-contents"};function p(h,e){const s=d("router-link");return c(),l("div",null,[e[2]||(e[2]=a("h1",{id:"sorter-module",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#sorter-module"},[a("span",null,"Sorter Module")])],-1)),e[3]||(e[3]=a("p",null,"The sorter module allows the user to control conveyor sorters on the grid.",-1)),a("nav",u,[a("ul",null,[a("li",null,[n(s,{to:"#commands"},{default:r(()=>[...e[0]||(e[0]=[t("Commands",-1)])]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#sorter-drain"},{default:r(()=>[...e[1]||(e[1]=[t("sorter/drain",-1)])]),_:1})])])])])]),e[4]||(e[4]=i(`<h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2><h3 id="sorter-drain" tabindex="-1"><a class="header-anchor" href="#sorter-drain"><span>sorter/drain</span></a></h3><p>Set the drain all state of the sorter or group of sorters.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">sorter/drain &lt;Sorter|Group&gt; true|false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Example</strong></p><p>Turn on <code>DrainAll</code></p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">sorter/drain <span class="token string">&quot;Gravel Exhaust&quot;</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Turn off <code>DrainAll</code></p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">sorter/drain VerticalFarmHarvester <span class="token boolean">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div>`,9))])}const v=o(m,[["render",p]]),b=JSON.parse(`{"path":"/IngameScript/Modules/Extension/SorterModule.html","title":"Sorter Module","lang":"en-US","frontmatter":{},"git":{"updatedTime":1758148874000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":1}],"changelog":[{"hash":"e6e70da1b1fafc38b169cc648afdf0e193066fd0","time":1758148874000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Add documentation for tag/set and tag/get commands. Improve 'screen' command documentation. Add SorterModule"}]},"filePathRelative":"IngameScript/Modules/Extension/SorterModule.md"}`);export{v as comp,b as data};
