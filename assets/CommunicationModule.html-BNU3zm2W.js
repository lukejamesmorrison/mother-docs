import{_ as l,c as r,a as n,b as s,e as t,d as i,w as a,r as m,o as d}from"./app-CVTspWaK.js";const u="/mother-docs/assets/terminal-info-1-Cg6_j68I.png",c={},p={class:"hint-container note"};function g(h,e){const o=m("RouteLink");return d(),r("div",null,[e[21]||(e[21]=n("h1",{id:"communication-module",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#communication-module"},[n("span",null,"Communication Module")])],-1)),e[22]||(e[22]=n("h2",{id:"intergrid-communication",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#intergrid-communication"},[n("span",null,"Intergrid Communication")])],-1)),e[23]||(e[23]=n("p",null,"Grids running Mother can communication by sending messages and querying each other. This is useful for coordinating actions between multiple ships like docking, or formation flight but allows remote command execution.",-1)),n("p",null,[e[1]||(e[1]=t("To send a command to another grid remotely, you must begin the command with the grid's ")),e[2]||(e[2]=n("code",null,"Name",-1)),e[3]||(e[3]=t(", which is stored in the ")),i(o,{to:"/IngameScript/Modules/Core/Almanac.html"},{default:a(()=>e[0]||(e[0]=[t("Almanac")])),_:1}),e[4]||(e[4]=t(". Your grid's name is found in the ")),e[5]||(e[5]=n("code",null,"Info",-1)),e[6]||(e[6]=t(" tab of the terminal screen."))]),e[24]||(e[24]=s('<div class="hint-container caution"><p class="hint-container-title">Caution</p><p>At this time, grid names cannot contain spaces &quot; &quot;.</p></div><p><img src="'+u+'" alt="Terminal Info tab"></p><h3 id="sending-a-remote-command-routine" tabindex="-1"><a class="header-anchor" href="#sending-a-remote-command-routine"><span>Sending a Remote Command/Routine</span></a></h3>',3)),n("p",null,[e[9]||(e[9]=t("The simplest form of intergrid communication is to send a remote command. Mother may send a command to any other grid running Mother contained in the ")),i(o,{to:"/IngameScript/Modules/Core/Almanac.html"},{default:a(()=>e[7]||(e[7]=[t("Almanac")])),_:1}),e[10]||(e[10]=t(", and available on the antenna network. The receiving grid will execute the command as if it were entered in the local Programmable Block terminal. See the ")),i(o,{to:"/IngameScript/Modules/Core/Security.html"},{default:a(()=>e[8]||(e[8]=[t("Security")])),_:1}),e[11]||(e[11]=t(" for more information on protecting intergrid communication from unauthorized access."))]),e[25]||(e[25]=s(`<p><strong>Example</strong></p><p>Imagine we have a drone and want it come directly to our position. We could pilot it remotely, but this is time consuming. Instead, we can send a command to the ship no matter where it is, and no matter where we are.</p><p>We can use the <code>nav/set-flight-plan</code> command to send a GPS waypoint to the ship so it knows where to go.</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="Terminal">Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># remotely set a flight plan on SurveyDrone grid</span></span>
<span class="line">@SurveyDrone nav/set-flight-plan <span class="token string">&quot;GPS:CurrentPosition#1:211.78:-52.93:59.19:#FF75C9F1:&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Similiarily, if we couple the autopilot start command into a routine, then the SurveyDrone will start flying to the GPS waypoint as soon as it receives the command.:</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="Terminal">Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># remotely set a flight plan, and start autopilot on SurveyDrone grid</span></span>
<span class="line">@SurveyDrone nav/set-flight-plan <span class="token string">&quot;GPS:CurrentPosition#1:211.78:-52.93:59.19:#FF75C9F1:&quot;</span><span class="token punctuation">;</span> fcs/start<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><br>`,7)),n("div",p,[e[17]||(e[17]=n("p",{class:"hint-container-title"},"Note",-1)),n("p",null,[e[13]||(e[13]=t("Mother will automatically reduce all remote commands to core commands listed in the ")),i(o,{to:"/IngameScript/CommandCheatsheet.html"},{default:a(()=>e[12]||(e[12]=[t("Command Cheatsheet")])),_:1}),e[14]||(e[14]=t(". This means that all grids can run remote routines as long as they contain the same core command library. ")),e[15]||(e[15]=n("a",{href:"https://steamcommunity.com/sharedfiles/filedetails/?id=3411507973",target:"_blank",rel:"noopener noreferrer"},"Keep Mother up to date",-1)),e[16]||(e[16]=t(" to ensure you have the most recent library of core commands across your grids."))])]),e[26]||(e[26]=s(`<h3 id="leveraging-local-commands" tabindex="-1"><a class="header-anchor" href="#leveraging-local-commands"><span>Leveraging Local Commands</span></a></h3><p>It is best to store important commands locally on a grid. Nonetheless, there will be time when you want to target a local command remotely. To do this, simply prefix the command with an underscore <code>_</code>.</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="Terminal">Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># remotely trigger a local command on SurveyDrone grid</span></span>
<span class="line">@SurveyDrone _PowerOff</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>This command will call the <code>PowerOff</code> command stored in the SurveyDrone&#39;s <strong>CustomData</strong>.</p>`,4)),n("p",null,[e[19]||(e[19]=t("See the ")),i(o,{to:"/IngameScript/Modules/Extension/NavigationModule.html"},{default:a(()=>e[18]||(e[18]=[t("Navigation Module")])),_:1}),e[20]||(e[20]=t(" for more information on flight planning."))]),e[27]||(e[27]=n("h3",{id:"sending-a-remote-command-video",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sending-a-remote-command-video"},[n("span",null,"Sending a Remote Command Video")])],-1)),e[28]||(e[28]=n("p",null,[n("a",{href:"https://www.youtube.com/watch?v=ubFKpvxrtz0",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://img.youtube.com/vi/ubFKpvxrtz0/0.jpg",alt:"Sending a Remote Command"})])],-1))])}const b=l(c,[["render",g],["__file","CommunicationModule.html.vue"]]),f=JSON.parse('{"path":"/IngameScript/Modules/Extension/CommunicationModule.html","title":"Communication Module","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Intergrid Communication","slug":"intergrid-communication","link":"#intergrid-communication","children":[{"level":3,"title":"Sending a Remote Command/Routine","slug":"sending-a-remote-command-routine","link":"#sending-a-remote-command-routine","children":[]},{"level":3,"title":"Leveraging Local Commands","slug":"leveraging-local-commands","link":"#leveraging-local-commands","children":[]},{"level":3,"title":"Sending a Remote Command Video","slug":"sending-a-remote-command-video","link":"#sending-a-remote-command-video","children":[]}]}],"git":{"updatedTime":1742428082000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":1}],"changelog":[{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"IngameScript/Modules/Extension/CommunicationModule.md"}');export{b as comp,f as data};
