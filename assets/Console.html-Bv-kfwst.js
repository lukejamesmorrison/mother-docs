import{_ as d,c as m,d as t,a,b as n,w as l,e as s,f as o,g as p}from"./app-CUcsPTDl.js";const u={},c={class:"table-of-contents"},h={class:"hint-container note"};function b(v,e){const i=o("router-link"),r=o("RouteLink");return p(),m("div",null,[e[13]||(e[13]=t(`<h1 id="console" tabindex="-1"><a class="header-anchor" href="#console"><span>Console</span></a></h1><p>You can use <a href="https://www.nuget.org/packages/Mother.CLI/" target="_blank" rel="noopener noreferrer">Mother CLI</a> to assist with creating projects and many common file types. Simply install it as a <strong>global</strong> Nuget package and access it with the <code>mother</code> command in your Terminal/Console.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother make:command CelebrateCommand <span class="token parameter variable">--module</span> CelebrationModule</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,3)),a("nav",c,[a("ul",null,[a("li",null,[n(i,{to:"#installation"},{default:l(()=>[...e[0]||(e[0]=[s("Installation",-1)])]),_:1})]),a("li",null,[n(i,{to:"#usage"},{default:l(()=>[...e[1]||(e[1]=[s("Usage",-1)])]),_:1})]),a("li",null,[n(i,{to:"#available-commands"},{default:l(()=>[...e[2]||(e[2]=[s("Available Commands",-1)])]),_:1}),a("ul",null,[a("li",null,[n(i,{to:"#install"},{default:l(()=>[...e[3]||(e[3]=[s("install",-1)])]),_:1})]),a("li",null,[n(i,{to:"#make-command"},{default:l(()=>[...e[4]||(e[4]=[s("make:command",-1)])]),_:1})]),a("li",null,[n(i,{to:"#make-event"},{default:l(()=>[...e[5]||(e[5]=[s("make:event",-1)])]),_:1})]),a("li",null,[n(i,{to:"#make-module"},{default:l(()=>[...e[6]||(e[6]=[s("make:module",-1)])]),_:1})]),a("li",null,[n(i,{to:"#new"},{default:l(()=>[...e[7]||(e[7]=[s("new",-1)])]),_:1})]),a("li",null,[n(i,{to:"#update"},{default:l(()=>[...e[8]||(e[8]=[s("update",-1)])]),_:1})])])])])]),e[14]||(e[14]=t(`<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>Install Mother CLI using the following command in your terminal:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Console/Terminal"><span>Console/Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">dotnet tool <span class="token function">install</span> <span class="token parameter variable">--global</span> Mother.CLI</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>Commands use the following format:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother <span class="token punctuation">[</span>command<span class="token punctuation">]</span> <span class="token punctuation">[</span>arguments<span class="token punctuation">]</span> <span class="token punctuation">[</span>--options<span class="token operator">=</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="available-commands" tabindex="-1"><a class="header-anchor" href="#available-commands"><span>Available Commands</span></a></h2><h3 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>install</span></a></h3><p>Install Mother Core modules. Run this when pulling your project from a remote repo. Since the <code>/Core</code> folder is ignored from version control, think of the this like using <code>npm install</code> or <code>pip install</code>.</p><p>You do not have to run this command when creating a new project, as this is done automatically.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="make-command" tabindex="-1"><a class="header-anchor" href="#make-command"><span>make:command</span></a></h3><p>Create a new terminal command. You may also specific a module to which this command belongs. Mother CLI will register it for you automatically, and place it within the <code>/Modules/{ModuleName}/Commands</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother make:command <span class="token punctuation">[</span>CommandName<span class="token punctuation">]</span> --module? <span class="token punctuation">[</span>ModuleName<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># For a module</span></span>
<span class="line">mother make:command CelebrateCommand <span class="token parameter variable">--module</span> CelebrationModule</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Without a module</span></span>
<span class="line">mother make:command CelebrateCommand</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="make-event" tabindex="-1"><a class="header-anchor" href="#make-event"><span>make:event</span></a></h3><p>Create a new event. You may also specific a module to which this event belongs. Mother CLI will register it for you automatically, and place it within the <code>/Modules/{ModuleName}/Events</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother make:event <span class="token punctuation">[</span>EventName<span class="token punctuation">]</span> --module? <span class="token punctuation">[</span>ModuleName<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># For a module</span></span>
<span class="line">mother make:event CelebrationStartedEvent <span class="token parameter variable">--module</span> CelebrationModule</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Without a module</span></span>
<span class="line">mother make:event CelebrationStartedEvent</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="make-module" tabindex="-1"><a class="header-anchor" href="#make-module"><span>make:module</span></a></h3><p>Create a new extension module. A project&#39;s modules will be created in the <code>/Modules</code> folder.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother make:module <span class="token punctuation">[</span>ModuleName<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Example:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother make:module CelebrationModule    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="new" tabindex="-1"><a class="header-anchor" href="#new"><span>new</span></a></h3><p>Create a new Mother project. This will create a new project in the <code>ProjectName</code> directory, within your current directory. It will also install the latest version of Mother Core to your project.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother new <span class="token punctuation">[</span>ProjectName<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother new MotherParty</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="update" tabindex="-1"><a class="header-anchor" href="#update"><span>update</span></a></h3><p>Update Mother Core modules. Running this periodically will ensure the Mother Core remains up to date. Think of the this like using <code>npm update</code> or <code>pip install --upgrade</code> to update project dependencies.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">mother update</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,33)),a("div",h,[e[12]||(e[12]=a("p",{class:"hint-container-title"},"Note",-1)),a("p",null,[e[10]||(e[10]=s("I plan to improve Mother Core versioning in the future to reduce breaking changes introduced by changes to the ",-1)),n(r,{to:"/Framework/Developer/CoreModules/CoreModules.html"},{default:l(()=>[...e[9]||(e[9]=[s("core modules",-1)])]),_:1}),e[11]||(e[11]=s(".",-1))])])])}const k=d(u,[["render",b]]),f=JSON.parse('{"path":"/Framework/Developer/Console.html","title":"Console","lang":"en-US","frontmatter":{"prev":"/Framework/Developer/BuildingAModule/BuildingAModule.md","next":"/Framework/Developer/CoreModules/CoreModules.md"},"git":{"updatedTime":1759090324000,"contributors":[{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":2,"url":"https://github.com/lukejamesmorrison"},{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":3}],"changelog":[{"hash":"a35e75652ef0f8a839721db64be2b1b0cf8d63e7","time":1759090324000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"1.0 Final"},{"hash":"a882bf3a253914d5c48f6f125da4f7c6a227b459","time":1755397526000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update framework footer navigation pathway"},{"hash":"d9971d8c51ba83366a5d7cdef50a67b2725764da","time":1755091529000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Improve documentation"},{"hash":"effd9d96219e3b940efebaae7ff63d6eda576759","time":1754690910000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Major update to Core pages"},{"hash":"45c719ddd7d0ab590376c4296af561cba3f201d2","time":1754520614000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Improve Core documentation and update animations on home page"}]},"filePathRelative":"Framework/Developer/Console.md"}');export{k as comp,f as data};
