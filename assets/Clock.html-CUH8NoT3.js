import{_ as i,c as p,a as s,d as u,b as e,w as t,e as a,f as l,g as r}from"./app-BvlDxCiZ.js";const d={},k={class:"table-of-contents"};function m(h,n){const o=l("router-link"),c=l("RouteLink");return r(),p("div",null,[n[10]||(n[10]=s("h1",{id:"clock",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#clock"},[s("span",null,"Clock")])],-1)),n[11]||(n[11]=s("p",null,"Mother uses a clock system to schedule system actions and execute logic across program cycles.",-1)),s("nav",k,[s("ul",null,[s("li",null,[e(o,{to:"#scheduling-a-action"},{default:t(()=>n[0]||(n[0]=[a("Scheduling a Action",-1)])),_:1,__:[0]})]),s("li",null,[e(o,{to:"#delaying-an-action"},{default:t(()=>n[1]||(n[1]=[a("Delaying an Action",-1)])),_:1,__:[1]})]),s("li",null,[e(o,{to:"#using-a-corountine"},{default:t(()=>n[2]||(n[2]=[a("Using a Corountine",-1)])),_:1,__:[2]})])])]),n[12]||(n[12]=s("h2",{id:"scheduling-a-action",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#scheduling-a-action"},[s("span",null,"Scheduling a Action")])],-1)),s("p",null,[n[4]||(n[4]=a("The ",-1)),n[5]||(n[5]=s("code",null,"Schedule()",-1)),n[6]||(n[6]=a(" method allows you to execute an action on a specific interval in ",-1)),n[7]||(n[7]=s("code",null,"seconds",-1)),n[8]||(n[8]=a(". This is useful for running periodic actions that should not be run every cycle. In most cases, you should trying to schedule actions rather than execute them within a Module's ",-1)),e(c,{to:"/Framework/Developer/BuildingAModule/BuildingAModule.html#running-a-module"},{default:t(()=>n[3]||(n[3]=[s("code",null,"Run()",-1)])),_:1,__:[3]}),n[9]||(n[9]=a(" method. It is highly recommended that you take great consideration when scheduling actions to avoid performance issues.",-1))]),n[13]||(n[13]=u(`<p>Not all system actions need to run every cycle.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MissileGuidanceModule.cs"><span>MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Clock</span> clock <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Clock<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// Schedule to run every program cycle</span></span>
<span class="line">    clock<span class="token punctuation">.</span><span class="token function">Schedule</span><span class="token punctuation">(</span><span class="token function">UpdatePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Or, schedule to run every 10 seconds</span></span>
<span class="line">    clock<span class="token punctuation">.</span><span class="token function">Schedule</span><span class="token punctuation">(</span><span class="token function">DetonateIfStopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">UpdatePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DetonateIfStopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="delaying-an-action" tabindex="-1"><a class="header-anchor" href="#delaying-an-action"><span>Delaying an Action</span></a></h2><p>The <code>QueueForLater()</code> method allows you to delay an action for a specified amount of time in <code>seconds</code>. This is useful for delaying actions that should not be executed immediately. It accepts an <a href="https://learn.microsoft.com/en-us/dotnet/api/system.action-1?view=net-9.0" target="_blank" rel="noopener noreferrer"><code>Action</code></a> as the first parameter.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MissileGuidanceModule.cs"><span>MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token class-name">Clock</span> clock <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Clock<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Clock<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">QueueForLater</span><span class="token punctuation">(</span><span class="token function">ActivateAutopilotSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Due to how common this action is, Mother exposes a simple helper method <code>Wait()</code>:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MissileGuidanceModule.cs"><span>MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line">Mother<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">ActivateAutopilotSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h2 id="using-a-corountine" tabindex="-1"><a class="header-anchor" href="#using-a-corountine"><span>Using a Corountine</span></a></h2><p>If you want to run a process in parallel, we can use the <code>StartCoroutine()</code> method. This method accepts an <code>IEnumerable&lt;double&gt;</code> input. Mother uses this method as part of the boot process.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MissileGuidanceModule.cs"><span>MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Arm</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Clock<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StartCoroutine</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">ArmSystems</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,10))])}const g=i(d,[["render",m]]),b=JSON.parse('{"path":"/Framework/Developer/CoreModules/Clock.html","title":"Clock","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754690910000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":3},{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":2,"url":"https://github.com/lukejamesmorrison"}],"changelog":[{"hash":"effd9d96219e3b940efebaae7ff63d6eda576759","time":1754690910000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Major update to Core pages"},{"hash":"656cfacdf436e6faca234cf77b83f77ed2c9c8d2","time":1751234971000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Finish first draft of framework documentation"},{"hash":"f894df28734323dfee730c0dd29c28fed9ffa424","time":1744056546000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"v0.2.10 Update"},{"hash":"02fd8ad6929ba3f2afb6d865b3cc1e7747ccd1fb","time":1743352100000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"0.2.9 Update"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/Developer/CoreModules/Clock.md"}');export{g as comp,b as data};
