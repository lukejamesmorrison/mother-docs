import{_ as r,c as p,a,d as c,e as n,b as e,w as t,f as o,g as d}from"./app-DT_RZozg.js";const u={},m={class:"table-of-contents"};function k(g,s){const i=o("RouteLink"),l=o("router-link");return d(),p("div",null,[s[9]||(s[9]=a("h1",{id:"serializer",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#serializer"},[a("span",null,"Serializer")])],-1)),a("p",null,[s[2]||(s[2]=n("On several occasions, it is most practical to convert our objects into strings. This is necessary when commiting data to ",-1)),e(i,{to:"/Framework/Developer/CoreModules/LocalStorage.html"},{default:t(()=>[...s[0]||(s[0]=[n("Local Storage",-1)])]),_:1}),s[3]||(s[3]=n(" or when communicating with another grid via the ",-1)),e(i,{to:"/Framework/Developer/CoreModules/IntergridMessageService.html"},{default:t(()=>[...s[1]||(s[1]=[n("Intergrid Message Service",-1)])]),_:1}),s[4]||(s[4]=n(".",-1))]),s[10]||(s[10]=a("p",null,[n("The "),a("code",null,"Serializer"),n(" utility class provides a set of static methods to serialize and deserialize objects.")],-1)),a("nav",m,[a("ul",null,[a("li",null,[e(l,{to:"#serialize-an-object"},{default:t(()=>[...s[5]||(s[5]=[n("Serialize an Object",-1)])]),_:1})])])]),s[11]||(s[11]=c(`<h2 id="serialize-an-object" tabindex="-1"><a class="header-anchor" href="#serialize-an-object"><span>Serialize an Object</span></a></h2><p>When sending a message to another grid, we need to convert our message into a string. This is done by calling the <code>Serializer.SerializeDictionary()</code> method to serialize or message <code>header</code> and <code>body</code>.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="IntergridMessagingObject.cs"><span>IntergridMessagingObject.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Create a dictionary to store the message</span></span>
<span class="line">    <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> body<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> header<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name"><span class="token keyword">string</span></span> headerSerialized <span class="token operator">=</span> Serializer<span class="token punctuation">.</span><span class="token function">SerializeDictionary</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name"><span class="token keyword">string</span></span> bodySerialized <span class="token operator">=</span> Serializer<span class="token punctuation">.</span><span class="token function">SerializeDictionary</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Serialize the dictionary</span></span>
<span class="line">    <span class="token keyword">return</span>  <span class="token interpolation-string"><span class="token string">$&quot;&lt;header&gt;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">headerSerialized</span><span class="token punctuation">}</span></span><span class="token string">&lt;/header&gt;&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token interpolation-string"><span class="token string">$&quot;&lt;body&gt;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">bodySerialized</span><span class="token punctuation">}</span></span><span class="token string">&lt;/body&gt;&quot;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,3)),a("p",null,[s[7]||(s[7]=n("See the ",-1)),e(i,{to:"/Framework/Developer/CoreModules/IntergridMessageService.html"},{default:t(()=>[...s[6]||(s[6]=[n("Intergrid Message Service",-1)])]),_:1}),s[8]||(s[8]=n(" for more information on how to send messages to other grids.",-1))])])}const v=r(u,[["render",k]]),h=JSON.parse('{"path":"/Framework/Developer/Utilities/Serializer.html","title":"Serializer","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754690910000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":1},{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":1,"url":"https://github.com/lukejamesmorrison"}],"changelog":[{"hash":"effd9d96219e3b940efebaae7ff63d6eda576759","time":1754690910000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Major update to Core pages"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/Developer/Utilities/Serializer.md"}');export{v as comp,h as data};
