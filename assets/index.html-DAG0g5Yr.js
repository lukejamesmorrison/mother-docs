import{r as m,o as k,c as v,a as s,b as e,d as c,e as a,w as t,f as p,g}from"./app-BgP5_kDJ.js";const b={class:"table-of-contents"},M={__name:"index.html",setup(h){const r=m(!1),u=()=>{const i=document.documentElement.getAttribute("data-theme");r.value=i==="dark"};return k(()=>{new MutationObserver(u).observe(document.documentElement,{attributes:!0,attributeFilter:["data-theme"]})}),(i,n)=>{const o=p("RouteLink"),l=p("router-link"),d=p("Mermaid");return g(),v("div",null,[n[35]||(n[35]=s("h1",{id:"mother-core-script-framework",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mother-core-script-framework"},[s("span",null,"Mother Core (Script Framework)")])],-1)),n[36]||(n[36]=s("p",null,[s("a",{href:"https://github.com/lukejamesmorrison/mother-core",target:"_blank",rel:"noopener noreferrer"},[s("img",{src:"https://img.shields.io/badge/version-1.0.0-blue?color=green&logo=github",alt:"Static Badge"})])],-1)),s("p",null,[n[1]||(n[1]=a("Mother Core is a framework for developing custom Programmable Block scripts for Space Engineers. It enables you to build interoperable modules to suit the specific needs of your ship or station. ",-1)),e(o,{to:"/IngameScript/IngameScript.html"},{default:t(()=>[...n[0]||(n[0]=[a("Mother OS",-1)])]),_:1}),n[2]||(n[2]=a(" is built with Mother Core and a collection of extension modules.",-1))]),s("nav",b,[s("ul",null,[s("li",null,[e(l,{to:"#common-activities"},{default:t(()=>[...n[3]||(n[3]=[a("Common Activities",-1)])]),_:1})]),s("li",null,[e(l,{to:"#overview"},{default:t(()=>[...n[4]||(n[4]=[a("Overview",-1)])]),_:1})]),s("li",null,[e(l,{to:"#recommended-file-structure"},{default:t(()=>[...n[5]||(n[5]=[a("Recommended File Structure",-1)])]),_:1})]),s("li",null,[e(l,{to:"#the-program-wrapper"},{default:t(()=>[...n[6]||(n[6]=[a("The Program Wrapper",-1)])]),_:1})]),s("li",null,[e(l,{to:"#the-extension-module"},{default:t(()=>[...n[7]||(n[7]=[a("The Extension Module",-1)])]),_:1})])])]),n[37]||(n[37]=s("h2",{id:"common-activities",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#common-activities"},[s("span",null,"Common Activities")])],-1)),s("ol",null,[s("li",null,[e(o,{to:"/Framework/Developer/GettingStarted/Installation.html"},{default:t(()=>[...n[8]||(n[8]=[a("Installation",-1)])]),_:1})]),s("li",null,[e(o,{to:"/Framework/Developer/BuildingAModule/BuildingAModule.html"},{default:t(()=>[...n[9]||(n[9]=[a("Create a Module",-1)])]),_:1})]),s("li",null,[e(o,{to:"/Framework/Developer/BuildingAModule/BuildingAModule.html#creating-a-command"},{default:t(()=>[...n[10]||(n[10]=[a("Create a Command",-1)])]),_:1})]),s("li",null,[e(o,{to:"/Framework/Developer/CoreModules/IntergridMessageService.html"},{default:t(()=>[...n[11]||(n[11]=[a("Send a Message",-1)])]),_:1})]),s("li",null,[e(o,{to:"/Framework/Developer/CoreModules/Clock.html"},{default:t(()=>[...n[12]||(n[12]=[a("Delay an Action",-1)])]),_:1})]),s("li",null,[e(o,{to:"/Framework/Developer/CoreModules/BlockCatalogue.html#accessing-blocks"},{default:t(()=>[...n[13]||(n[13]=[a("Retrieve a Block",-1)])]),_:1})])]),n[38]||(n[38]=s("h2",{id:"overview",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#overview"},[s("span",null,"Overview")])],-1)),s("p",null,[n[15]||(n[15]=a("Scripts built with Mother Core depend on the ",-1)),n[16]||(n[16]=s("a",{href:"https://github.com/malware-dev/MDK-SE/wiki/Sandbox.ModAPI.Ingame.MyGridProgram",target:"_blank",rel:"noopener noreferrer"},"Program",-1)),n[17]||(n[17]=a(" instance, and a collection of ",-1)),e(o,{to:"/Framework/Developer/CoreModules/CoreModules.html"},{default:t(()=>[...n[14]||(n[14]=[a("Core Modules",-1)])]),_:1}),n[18]||(n[18]=a(". These core modules provide a wide range of functionality, including intergrid communication, event handling, and block management. Developers can add their own functionality via ",-1)),n[19]||(n[19]=s("strong",null,"Extension Modules",-1)),n[20]||(n[20]=a(".",-1))]),e(d,{id:"mermaid-60",code:"eJyNkMGqwjAQRff5iqFQ+h483weICKIuRUFxIy5SO2qgyZQkBcH23520tSgquAkzd+benCSOrwJAGeWHECqAxJ9RYzKEJJUOk78HcSutkmmOjqftcnPUfNaijmMhTlYWZ9jMGn1B7LJTsriL2hpCE+1hMBhXMyzQZA7IVLCyxE69i7oi2n8RMCVdkMMM6Fg1+oKyMufVULM3NO4piUel86RhfbCq8KPUjn8U/ndTWK5/37B9hBAPya9A84tH4xSZO1UvdGj97SvFTHeVCdpcV6btZ354WW+f5FoaeQjG4GNucQN3k5UT"}),n[39]||(n[39]=s("h2",{id:"recommended-file-structure",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#recommended-file-structure"},[s("span",null,"Recommended File Structure")])],-1)),s("p",null,[n[22]||(n[22]=a("A ",-1)),n[23]||(n[23]=s("strong",null,"Module",-1)),n[24]||(n[24]=a(" is the primary unit of functionality. Therefore modules should in most cases manage their own commands and events. This allows modules to be self-contained and reusable across different scripts. Mother Core and ",-1)),e(o,{to:"/IngameScript/IngameScript.html"},{default:t(()=>[...n[21]||(n[21]=[a("Mother OS",-1)])]),_:1}),n[25]||(n[25]=a(" observe the following file structure:",-1))]),n[40]||(n[40]=c(`<div class="code-block-with-title"><div class="code-block-title-bar" data-title="File Structure"><span>File Structure</span></div><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext"><pre><code class="language-plaintext"><span class="line">/</span>
<span class="line">├── Program.cs</span>
<span class="line">├── thumb.png</span>
<span class="line">├── Modules/</span>
<span class="line">    ├── MissileGuidanceModule/</span>
<span class="line">        ├── MissileGuidanceModule.cs</span>
<span class="line">        ├── Commands/</span>
<span class="line">            ├── LaunchCommand.cs</span>
<span class="line">            ├── DetonateCommand.cs</span>
<span class="line">        ├── Events/</span>
<span class="line">            ├── MissileLaunchedEvent.cs</span>
<span class="line">            ├── MissileDetonatingEvent.cs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="the-program-wrapper" tabindex="-1"><a class="header-anchor" href="#the-program-wrapper"><span>The Program Wrapper</span></a></h2><p>We use the existing <code>Program</code> wrapper created using <a href="https://github.com/malforge/mdk2" target="_blank" rel="noopener noreferrer">MDK2</a>, but with a few modifications that allow Mother to do her thing. We register our Modules in the constructor, and hook into the <code>Save()</code> and <code>Run()</code> methods to give Mother complete control.</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">Program</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MyGridProgram</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Mother</span> mother<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Program constructor</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token function">Program</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Create the Mother instance</span></span>
<span class="line">        mother <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Mother</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Register Extension Modules</span></span>
<span class="line">        mother<span class="token punctuation">.</span><span class="token function">RegisterModules</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>IExtensionModule<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DoorModule</span><span class="token punctuation">(</span>mother<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LightModule</span><span class="token punctuation">(</span>mother<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MissileGuidanceModule</span><span class="token punctuation">(</span>mother<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token range operator">..</span><span class="token punctuation">.</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Save before recompile or when triggered</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        Storage <span class="token operator">=</span> mother<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Run Mother each time the Program runs</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> argument<span class="token punctuation">,</span> <span class="token class-name">UpdateType</span> updateType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        mother<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>argument<span class="token punctuation">,</span> updateType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-extension-module" tabindex="-1"><a class="header-anchor" href="#the-extension-module"><span>The Extension Module</span></a></h2>`,5)),s("p",null,[n[28]||(n[28]=a("You can add new functionality to the program by creating an ",-1)),e(o,{to:"/Framework/Developer/BuildingAModule/BuildingAModule.html"},{default:t(()=>[...n[26]||(n[26]=[a("Extension Module",-1)])]),_:1}),n[29]||(n[29]=a(". These modules are registered in the ",-1)),n[30]||(n[30]=s("code",null,"Program",-1)),n[31]||(n[31]=a(" constructor using the ",-1)),n[32]||(n[32]=s("code",null,"RegisterModules()",-1)),n[33]||(n[33]=a(" method. They may access all other modules directly and respond to changes when other modules emit ",-1)),e(o,{to:"/Framework/Developer/BuildingAModule/BuildingAModule.html#events"},{default:t(()=>[...n[27]||(n[27]=[a("Events",-1)])]),_:1}),n[34]||(n[34]=a(".",-1))]),n[41]||(n[41]=c(`<p>We will use the <code>MissileGuidanceModule</code> as our example. It provides functionality to launch and detonate missiles, and updates the thrusters on each program cycle.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="MissileGuidanceModule.cs"><span>MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">MissileGuidanceModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Boot the module</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Reference important modules</span></span>
<span class="line">        FlightPlanningModule <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FlightPlanningModule<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Register custom terminal commands like &#39;detonate&#39; and &#39;launch&#39;</span></span>
<span class="line">        <span class="token function">RegisterCommand</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">RegisterCommand</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DetonateCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Load relevant blocks from the grid</span></span>
<span class="line">        Thrusters <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>BlockCatalogue<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetBlocks</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IMyThrust<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Listen for events</span></span>
<span class="line">        <span class="token generic-method"><span class="token function">Subscribe</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MissileLaunchedEvent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Run module every program cycle</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">UpdateThrusters</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Do something...</span></span>
<span class="line">    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">UpdateThrusters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        Thrusters<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span>thruster <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// ...</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>As you can see, connecting logic with Modules is easy and most of it is done in the <code>Boot()</code> method.</p>`,3))])}}},w=JSON.parse(`{"path":"/Framework/","title":"Mother Core (Script Framework)","lang":"en-US","frontmatter":{"next":"/Framework/Developer/GettingStarted/Installation.md"},"git":{"updatedTime":1759090324000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":10},{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":3,"url":"https://github.com/lukejamesmorrison"}],"changelog":[{"hash":"a35e75652ef0f8a839721db64be2b1b0cf8d63e7","time":1759090324000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"1.0 Final"},{"hash":"e6e70da1b1fafc38b169cc648afdf0e193066fd0","time":1758148874000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Add documentation for tag/set and tag/get commands. Improve 'screen' command documentation. Add SorterModule"},{"hash":"90ef559149c4e90132aa0f257d78148f56b9dfa6","time":1755006332000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Updates to soyuz animation &#x26; svg"},{"hash":"effd9d96219e3b940efebaae7ff63d6eda576759","time":1754690910000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Major update to Core pages"},{"hash":"45c719ddd7d0ab590376c4296af561cba3f201d2","time":1754520614000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Improve Core documentation and update animations on home page"},{"hash":"5d3b96ad4629035735d9d0f86b5aa99d0c5200c7","time":1753997755000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Ongoing updates"},{"hash":"656cfacdf436e6faca234cf77b83f77ed2c9c8d2","time":1751234971000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Finish first draft of framework documentation"},{"hash":"9fdbfc2d95d5a85f876d6496e1e2d1fb3196d285","time":1751221127000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Framework updates"},{"hash":"15ee173564b47688d911d239bf1296182577deca","time":1744933175000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs"},{"hash":"d4c81fc8211f49ec3f9c79e45ca84998be0dbdb3","time":1744758881000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Add more module pages"},{"hash":"db312309835110752ea2b209f7c3efbf6e7d9264","time":1744758309000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"dev initial commit"},{"hash":"f894df28734323dfee730c0dd29c28fed9ffa424","time":1744056546000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"v0.2.10 Update"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/README.md"}`);export{M as comp,w as data};
