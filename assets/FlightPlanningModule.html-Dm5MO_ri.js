import{_ as d,c as p,a,d as o,b as t,w as s,e as n,r,o as c}from"./app-Duj2xXY1.js";const h="/mother-docs/assets/terminal-gps-1-xN5JRJYc.png",u={},g={class:"table-of-contents"};function m(v,e){const i=r("router-link"),l=r("RouteLink");return c(),p("div",null,[e[15]||(e[15]=a("h1",{id:"flight-planning-module",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#flight-planning-module"},[a("span",null,"Flight Planning Module")])],-1)),a("nav",g,[a("ul",null,[a("li",null,[t(i,{to:"#flight-planning"},{default:s(()=>e[0]||(e[0]=[n("Flight Planning")])),_:1})]),a("li",null,[t(i,{to:"#the-flight-plan"},{default:s(()=>e[1]||(e[1]=[n("The Flight Plan")])),_:1}),a("ul",null,[a("li",null,[t(i,{to:"#setting-a-gps-waypoint"},{default:s(()=>e[2]||(e[2]=[n("Setting a GPS Waypoint")])),_:1})]),a("li",null,[t(i,{to:"#setting-a-flight-plan"},{default:s(()=>e[3]||(e[3]=[n("Setting a Flight Plan")])),_:1})]),a("li",null,[t(i,{to:"#running-routines-at-a-waypoint"},{default:s(()=>e[4]||(e[4]=[n("Running Routines at a Waypoint")])),_:1})]),a("li",null,[t(i,{to:"#modifiers"},{default:s(()=>e[5]||(e[5]=[n("Modifiers")])),_:1})]),a("li",null,[t(i,{to:"#loading-a-flight-plan"},{default:s(()=>e[6]||(e[6]=[n("Loading a Flight Plan")])),_:1})])])]),a("li",null,[t(i,{to:"#commands"},{default:s(()=>e[7]||(e[7]=[n("Commands")])),_:1}),a("ul",null,[a("li",null,[t(i,{to:"#set-flight-plan"},{default:s(()=>e[8]||(e[8]=[n("set-flight-plan")])),_:1})])])])])]),e[16]||(e[16]=a("h2",{id:"flight-planning",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#flight-planning"},[a("span",null,"Flight Planning")])],-1)),a("p",null,[e[10]||(e[10]=n("Mother has a built-in flight planning system that allows you to dynamical assign flight plans to your grid. You may fly to GPS Waypoints, and grids in the Almanac via a simple interface. In cooperation with the ")),t(l,{to:"/IngameScript/Modules/Extension/FlightControlModule.html"},{default:s(()=>e[9]||(e[9]=[n("Flight Control Module")])),_:1}),e[11]||(e[11]=n(", we are leveraging the Remote Control block for waypoint management and autopilot."))]),e[17]||(e[17]=o(`<p>Let&#39;s start with reviewing the GPS Waypoint system. A <strong>GPS Waypoint</strong> has 6 parts, which are separated by colons <code>:</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&lt;</span>Identifier<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>Name<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>X<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>Y<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>Z<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>Color<span class="token operator">&gt;</span>:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Format</th><th>Description</th></tr></thead><tbody><tr><td><code>Identifier</code></td><td>string = <strong>GPS</strong></td><td>The identifier showing that this is a GPS waypoint.</td></tr><tr><td><code>Name</code></td><td>string</td><td>The name of the waypoint.</td></tr><tr><td><code>X</code></td><td>float</td><td>The X coordinate of the waypoint.</td></tr><tr><td><code>Y</code></td><td>float</td><td>The Y coordinate of the waypoint.</td></tr><tr><td><code>Z</code></td><td>float</td><td>The Z coordinate of the waypoint.</td></tr><tr><td><code>Color</code></td><td>string</td><td>The color of the waypoint in hexidecimal format, with transparency <a href="https://www.quackit.com/css/color/values/css_hex_color_notation_8_digits.cfm#:~:text=Syntax,alpha%20chanel%20of%20the%20color." target="_blank" rel="noopener noreferrer">Learn more</a>.</td></tr></tbody></table><p>We use this format since at any time, a player may copy a GPS waypoint to their clipboard via the GPS Panel in the terminal. This simplifies the process of setting a flight plan considerably - copy, paste, fly.</p><h2 id="the-flight-plan" tabindex="-1"><a class="header-anchor" href="#the-flight-plan"><span>The Flight Plan</span></a></h2><p>A flight plan is broken into terms, separated by a space <code></code>. Each term is a <strong>GPS waypoint</strong>, a <strong>routine</strong>, or a <strong>modifier</strong>. The flight plan can be passed as a single string to the <a href="#set-flight-plan"><code>nav/set-flight-plan</code></a> command.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1: { DoSomethingSecret; light/blink SignalLights med; }&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Every waypoint may be followed by a routine, which will run when that waypoint is reached. You may also start the flight plan with a routine which will run immediately. Perfect for pre-flight.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;{ RetractLandingGear } GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1: { DoSomethingSecret; light/blink SignalLights med; }&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>This looks best as a custom command in <strong>Custom Data</strong>:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Mother &gt; Custom Data"><span>Mother &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Commands</span><span class="token punctuation">]</span></span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">FlyToTopSecretBase</span><span class="token punctuation">=</span></span>
<span class="line">| nav/set-flight-plan </span>
<span class="line">| &quot;</span>
<span class="line">|     { RetractLandingGear } </span>
<span class="line">| </span>
<span class="line">|     GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:</span>
<span class="line">|     { DoSomethingSecret; light/blink SignalLights med; }</span>
<span class="line">| &quot;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>Take note of the double quotes <code>&quot;</code>. These must enclose the entire flight plan string to be interpretted correctly. Flight plan terms must be separeted by a space <code></code>. You can use additional spaces to indent the flight plan for readability without issue.</p></div><h3 id="setting-a-gps-waypoint" tabindex="-1"><a class="header-anchor" href="#setting-a-gps-waypoint"><span>Setting a GPS Waypoint</span></a></h3><p>You can copy any GPS waypoint you have created to your clipboad by selecting it in the GPS panel and clicking the <code>Copy to clipboard</code> button. This makes GPS waypoints easy to transfer into flight plans.</p><p><img src="`+h+`" alt="Copy GPS to Clipboard"></p><h3 id="setting-a-flight-plan" tabindex="-1"><a class="header-anchor" href="#setting-a-flight-plan"><span>Setting a Flight Plan</span></a></h3><p>Here is an example GPS waypoint, <code>TopSecretBase</code>:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To chart a course to this waypoint, we can set it as Mother&#39;s current flight plan:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>If we wanted to fly to a <code>Midpoint</code>, before proceeding to the <code>TopSecretBase</code>, we can simply add the term to our flight plan, separated by a space:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;GPS:Midpoint:190.12:-54.45:45.89:#FF75C9F1: GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>If this is a long flight plan, it is most intuitive to store the command in the Programmable Block&#39;s <strong>Custom Data</strong>:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Mother &gt; Custom Data"><span>Mother &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Commands</span><span class="token punctuation">]</span></span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">set-route-1</span><span class="token punctuation">=</span></span>
<span class="line">| nav/set-flight-plan </span>
<span class="line">| &quot;</span>
<span class="line">|     GPS:Midpoint:190.12:-54.45:45.89:#FF75C9F1: </span>
<span class="line">|     GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:</span>
<span class="line">| &quot;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,24)),a("p",null,[e[13]||(e[13]=n("Under the hood, Mother will monitoring and update progress towards each waypoint, interfacing with the grid's Remote Control block. When a flight plan is created, GPS waypoints will be added automatically to the ")),t(l,{to:"/IngameScript/Modules/Core/Almanac.html"},{default:s(()=>e[12]||(e[12]=[n("Almanac")])),_:1}),e[14]||(e[14]=n(", and you may use them by name in subsequent flight planning."))]),e[18]||(e[18]=o(`<p>Next time we want to run the flight plan we can shorten it:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;Midpoint TopSecretBase&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Use the <code>nav/set-flight-plan</code> and <code>fcs/start</code> commands together to set the flight plan and begin autopilot immediately.</p></div><hr><h3 id="running-routines-at-a-waypoint" tabindex="-1"><a class="header-anchor" href="#running-routines-at-a-waypoint"><span>Running Routines at a Waypoint</span></a></h3><p>Mother supports running routines when your grid reaches a specific waypoint. This is done by adding a routine to the flight plan string.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;GPS:Midpoint:190.12:-54.45:45.89:#FF75C9F1: { ExtendWings; light/blink SignalLights off; block/off BoosterThrusters; }&quot;</span><span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="modifiers" tabindex="-1"><a class="header-anchor" href="#modifiers"><span>Modifiers</span></a></h3><p>A flight plan may be modified with the following options, as the last term in the flight plan string:</p><table><thead><tr><th style="text-align:center;">Option</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>R</code></td><td>Roundtrip</td><td>The grid will fly the flight plan in reverse after reaching the last waypoint.</td></tr><tr><td style="text-align:center;"><code>C</code></td><td>Continuous</td><td>The grid will fly the flight plan in a continuous loop, back and forth, without stopping.</td></tr></tbody></table><p>An example of a roundtrip flight plan:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Fly to Midpoint, then TopSecretBase, then return to Midpoint</span></span>
<span class="line">nav/set-flight-plan <span class="token string">&quot;GPS:Midpoint:190.12:-54.45:45.89:#FF75C9F1: GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1: R&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="loading-a-flight-plan" tabindex="-1"><a class="header-anchor" href="#loading-a-flight-plan"><span>Loading a Flight Plan</span></a></h3><p><a href="https://www.youtube.com/watch?v=jFMLTiwC3Sg" target="_blank" rel="noopener noreferrer"><img src="https://img.youtube.com/vi/jFMLTiwC3Sg/0.jpg" alt="Loading a Flight Plan"></a></p><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2><h3 id="set-flight-plan" tabindex="-1"><a class="header-anchor" href="#set-flight-plan"><span>set-flight-plan</span></a></h3><p>Set the active flight plan in the navigation system. Combine with <a href="#flight-control-system"><code>fcs/start</code></a> to initiate autopilot.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">nav/set-flight-plan &lt;FlightPlanString&gt; [--options]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Example:</strong></p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Terminal"><span>Terminal</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">nav/set-flight-plan <span class="token string">&quot;GPS:Midpoint:190.12:-54.45:45.89:#FF75C9F1: GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div>`,20))])}const f=d(u,[["render",m],["__file","FlightPlanningModule.html.vue"]]),y=JSON.parse('{"path":"/IngameScript/Modules/Extension/FlightPlanningModule.html","title":"Flight Planning Module","lang":"en-US","frontmatter":{},"git":{"updatedTime":1744758881000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":4}],"changelog":[{"hash":"d4c81fc8211f49ec3f9c79e45ca84998be0dbdb3","time":1744758881000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Add more module pages"},{"hash":"ef0206845170759b186ba757dc6a404bbb00a74b","time":1742593967000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs"},{"hash":"c8cf40a8705ec6403d9c49f965678cbd9e3d5f98","time":1742503231000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs for v0.2.8"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"IngameScript/Modules/Extension/FlightPlanningModule.md"}');export{f as comp,y as data};
