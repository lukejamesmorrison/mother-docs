import{_ as i,c,a as s,d as p,b as e,w as t,f as l,g as r,e as o}from"./app-BgP5_kDJ.js";const u={},d={class:"table-of-contents"};function k(m,n){const a=l("router-link");return r(),c("div",null,[n[3]||(n[3]=s("h1",{id:"activity-monitor",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#activity-monitor"},[s("span",null,"Activity Monitor")])],-1)),s("nav",d,[s("ul",null,[s("li",null,[e(a,{to:"#overview"},{default:t(()=>[...n[0]||(n[0]=[o("Overview",-1)])]),_:1})]),s("li",null,[e(a,{to:"#registering-a-block"},{default:t(()=>[...n[1]||(n[1]=[o("Registering a Block",-1)])]),_:1})]),s("li",null,[e(a,{to:"#unregistering-a-block"},{default:t(()=>[...n[2]||(n[2]=[o("Unregistering a Block",-1)])]),_:1})])])]),n[4]||(n[4]=p(`<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The Activity Monitor&#39;s primary role is to track blocks that are changing continuously (ie. rotor moving to angle). Each program cycle, the activity monitor checks the state of each registered block, then unregisters it when the terminal state has been reached.</p><h2 id="registering-a-block" tabindex="-1"><a class="header-anchor" href="#registering-a-block"><span>Registering a Block</span></a></h2><p>To register a block, use the <code>RegisterBlock()</code> method. It takes the target block (<code>IMyTerminalBlock</code>) as it&#39;s first parameter. The second parameters is a function that determines if the block is at its terminal state (<code>bool</code>). The third parameter is an <code>Action</code> that will be executed when the terminal state is reached.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="HingeModule.cs"><span>HingeModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HingeModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">StartRotation</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">float</span></span> targetAngle<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">IMyMotorStator</span> hinge <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetBlocksByName</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IMyMotorStator<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Main Hinge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ActivityMonitor<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RegisterBlock</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token comment">// The hinge block to monitor</span></span>
<span class="line">            hinge<span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// Function to check if the hinge is at its terminal position</span></span>
<span class="line">            block <span class="token operator">=&gt;</span> <span class="token function">HingeAtTerminalPosition</span><span class="token punctuation">(</span>block <span class="token keyword">as</span> <span class="token class-name">IMyMotorStator</span><span class="token punctuation">,</span> targetAngle<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// Action to execute when the hinge reaches its terminal position</span></span>
<span class="line">            block <span class="token operator">=&gt;</span> <span class="token function">LockHinge</span><span class="token punctuation">(</span>block <span class="token keyword">as</span> <span class="token class-name">IMyMotorStator</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="unregistering-a-block" tabindex="-1"><a class="header-anchor" href="#unregistering-a-block"><span>Unregistering a Block</span></a></h2><p>If you wish to unregister a block before it has reached its terminal state, you can use the <code>UnregisterBlock()</code> method to stop monitoring immediately.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="HingeModule.cs"><span>HingeModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HingeModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">StopRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">IMyMotorStator</span> hinge <span class="token operator">=</span> Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetBlocksByName</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IMyMotorStator<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Main Hinge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Stop hinge motion and lock it</span></span>
<span class="line">        hinge<span class="token punctuation">.</span>TargetVelocityRPM <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        hinge<span class="token punctuation">.</span>RotorLock <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Stop monitoring the hinge</span></span>
<span class="line">        Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ActivityMonitor<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UnregisterBlock</span><span class="token punctuation">(</span>hinge<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,8))])}const g=i(u,[["render",k]]),h=JSON.parse('{"path":"/Framework/Developer/CoreModules/ActivityMonitor.html","title":"Activity Monitor","lang":"en-US","frontmatter":{},"git":{"updatedTime":1751234971000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":3},{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":1,"url":"https://github.com/lukejamesmorrison"}],"changelog":[{"hash":"656cfacdf436e6faca234cf77b83f77ed2c9c8d2","time":1751234971000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Finish first draft of framework documentation"},{"hash":"57a351dcc00e409bf8d61acf8f42f8fb040a1ca5","time":1751222635000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"add activity monitor docs"},{"hash":"9fdbfc2d95d5a85f876d6496e1e2d1fb3196d285","time":1751221127000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Framework updates"},{"hash":"db312309835110752ea2b209f7c3efbf6e7d9264","time":1744758309000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"dev initial commit"}]},"filePathRelative":"Framework/Developer/CoreModules/ActivityMonitor.md"}');export{g as comp,h as data};
