import{_ as a,c as t,a as n,b as o,d as l,w as i,r,o as d,e as c}from"./app-CVTspWaK.js";const p={},u={class:"table-of-contents"};function m(h,e){const s=r("router-link");return d(),t("div",null,[e[1]||(e[1]=n("h1",{id:"sensor-module",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sensor-module"},[n("span",null,"Sensor Module")])],-1)),e[2]||(e[2]=n("p",null,"The Sensor module allows the user to control Sensor blocks on the grid.",-1)),n("nav",u,[n("ul",null,[n("li",null,[l(s,{to:"#hooks"},{default:i(()=>e[0]||(e[0]=[c("Hooks")])),_:1})])])]),e[3]||(e[3]=o(`<h2 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>Hooks</span></a></h2><p>The following hooks can be define in the block&#39;s CustomData, and will be triggered when the corresponding command is called:</p><table><thead><tr><th>Key</th><th>Trigger</th></tr></thead><tbody><tr><td><code>onDetect</code></td><td>Run when a Sensor block detects an entity.</td></tr><tr><td><code>onClear</code></td><td>Run when a Sensor block does not detect an entity.</td></tr></tbody></table><p><strong>Example</strong></p><p>Imagine our Sensor has a status light we want to view elsewhere:</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="LandingPadSensor &gt; Custom Data">LandingPadSensor &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">onDetect</span><span class="token punctuation">=</span><span class="token value attr-value">light/blink &quot;Landing Pad Light&quot; fast;</span></span>
<span class="line"><span class="token key attr-name">onClear</span><span class="token punctuation">=</span><span class="token value attr-value">light/blink &quot;Landing Pad Light&quot; off;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>or</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="Mother &gt; Custom Data">Mother &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">LandingPadSensor.onDetect</span><span class="token punctuation">=</span><span class="token value attr-value">light/blink &quot;Landing Pad Light&quot; fast;</span></span>
<span class="line"><span class="token key attr-name">&quot;Airlock Sensor&quot;.onClear</span><span class="token punctuation">=</span><span class="token value attr-value">door/close AirlockInnerDoor;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,8))])}const g=a(p,[["render",m],["__file","SensorModule.html.vue"]]),v=JSON.parse('{"path":"/IngameScript/Modules/Extension/SensorModule.html","title":"Sensor Module","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Hooks","slug":"hooks","link":"#hooks","children":[]}],"git":{"updatedTime":1742428082000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":1}],"changelog":[{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"IngameScript/Modules/Extension/SensorModule.md"}');export{g as comp,v as data};
