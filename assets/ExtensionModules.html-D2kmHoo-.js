import{_ as s,c as a,b as e,o as t}from"./app-BAyOkzRw.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="extension-modules" tabindex="-1"><a class="header-anchor" href="#extension-modules"><span>Extension Modules</span></a></h1><h2 id="creating-an-extension-module" tabindex="-1"><a class="header-anchor" href="#creating-an-extension-module"><span>Creating an Extension Module</span></a></h2><p>Extension modules expose several important capabilities for players to leverage. The must implement the <code>IExtensionModule</code> interface.</p><h3 id="boot" tabindex="-1"><a class="header-anchor" href="#boot"><span>Boot</span></a></h3><p>The <code>Boot</code> method of every module is called during boot by Mother. Extension modules are registered and may access registered Core Modules. It is important to consider boot order to reduce conflicts among inter-module dependencies.</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="MissileGuidanceModule.cs">MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MissileGuidanceModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Setup actions</span></span>
<span class="line">        <span class="token function">ConfigureWarheads</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Register commands</span></span>
<span class="line">        Commands<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DetonateCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Subscribe to events</span></span>
<span class="line">        Mother<span class="token punctuation">.</span>EventBus<span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">WaypointReachedEvent</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>Run</span></a></h3><p>You may also run processes each time the program cycles using the <code>Run</code> method, though this is only recommended for light use cases. Otherwise it is advised to use the Clock&#39;s <code>Schedule</code> method.</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="MissileGuidanceModule.cs">MissileGuidanceModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MissileGuidanceModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">DetermineCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">UpdateThrusters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsWithinTerminalRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ArmWarheads</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="handleevent" tabindex="-1"><a class="header-anchor" href="#handleevent"><span>HandleEvent</span></a></h3><p>Mother allows modules to emit and subscribe to events, allow intermodule transmission of system events. Once subscribed to an event, a Module can intercept it each time it is emitted using the <code>HandleEvent</code> method:</p><div class="code-block-title"><div class="code-block-title-bar"><span class="title" data-title="NavigationModule.cs">NavigationModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NavigationModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseExtensionModule</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Subscribe to the event during instantiation</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token function">NavigationModule</span><span class="token punctuation">(</span><span class="token class-name">Mother</span> mother<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        Mother <span class="token operator">=</span> mother<span class="token punctuation">;</span></span>
<span class="line">        Mother<span class="token punctuation">.</span>EventBus<span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">WaypointReachedEvent</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Handle the event when it is emitted by a module</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">HandleEvent</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> eventName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> eventData<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>eventName<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">WaypointReachedEvent</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">           Mother<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;Waypoint Reached!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">           <span class="token function">Detonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Detonate the warhead</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Detonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,12)]))}const o=s(p,[["render",l],["__file","ExtensionModules.html.vue"]]),u=JSON.parse('{"path":"/Framework/Developer/ExtensionModules/ExtensionModules.html","title":"Extension Modules","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Creating an Extension Module","slug":"creating-an-extension-module","link":"#creating-an-extension-module","children":[{"level":3,"title":"Boot","slug":"boot","link":"#boot","children":[]},{"level":3,"title":"Run","slug":"run","link":"#run","children":[]},{"level":3,"title":"HandleEvent","slug":"handleevent","link":"#handleevent","children":[]}]}],"git":{"updatedTime":1742428082000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":1}],"changelog":[{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/Developer/ExtensionModules/ExtensionModules.md"}');export{o as comp,u as data};
