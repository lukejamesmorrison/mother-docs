import{_ as s,c as a,a as o,b as r,w as n,e as l,r as i,o as u}from"./app-8PZc5R4_.js";const d={};function m(g,e){const t=i("RouteLink");return u(),a("div",null,[e[19]||(e[19]=o("h1",{id:"core-modules",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#core-modules"},[o("span",null,"Core Modules")])],-1)),e[20]||(e[20]=o("p",null,"Core modules act as Mother's framework, enabling extension modules.",-1)),o("table",null,[e[18]||(e[18]=o("thead",null,[o("tr",null,[o("th",null,"Name"),o("th",null,"Description")])],-1)),o("tbody",null,[o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/ActivityMonitor.html"},{default:n(()=>e[0]||(e[0]=[l("Activity Monitor")])),_:1,__:[0]})]),e[1]||(e[1]=o("td",null,"Monitors functional block activity across cycles to enable safeguards like stopping and locking once the activity is complete.",-1))]),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/Almanac.html"},{default:n(()=>e[2]||(e[2]=[l("Almanac")])),_:1,__:[2]})]),e[3]||(e[3]=o("td",null,"Stores information about other grids running Mother including position and hostility.",-1))]),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/BlockCatalogue.html"},{default:n(()=>e[4]||(e[4]=[l("Block Catalogue")])),_:1,__:[4]})]),e[5]||(e[5]=o("td",null,"Catalogues all functional blocks available on the grid for use in automations.",-1))]),e[16]||(e[16]=o("tr",null,[o("td",null,"Command Bus"),o("td",null,"Handles commands and routines executed by a player, or remotely from another grid.")],-1)),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/Configuration.html"},{default:n(()=>e[6]||(e[6]=[l("Configuration")])),_:1,__:[6]})]),e[7]||(e[7]=o("td",null,[l("Manages the configuration of Mother and its modules using the Programmable Block's "),o("code",null,"Custom Data"),l(".")],-1))]),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/EventBus.html"},{default:n(()=>e[8]||(e[8]=[l("Event Bus")])),_:1,__:[8]})]),e[9]||(e[9]=o("td",null,"Handles system events generated by the grid or other grids running Mother. This allows Mother to remain modular and only run when something has changed via event broadcasting.",-1))]),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/IntergridMessageService.html"},{default:n(()=>e[10]||(e[10]=[l("Intergrid Message Service")])),_:1,__:[10]})]),e[11]||(e[11]=o("td",null,"Handles communication between grids running Mother.",-1))]),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/LocalStorage.html"},{default:n(()=>e[12]||(e[12]=[l("Local Storage")])),_:1,__:[12]})]),e[13]||(e[13]=o("td",null,[l("Allows Mother to store information across cycles, even if an error occurs or a player hits "),o("code",null,"Recompile"),l(".")],-1))]),e[17]||(e[17]=o("tr",null,[o("td",null,"Log"),o("td",null,"Logs information about the grid and Mother's activity.")],-1)),o("tr",null,[o("td",null,[r(t,{to:"/Framework/Developer/CoreModules/Security.html"},{default:n(()=>e[14]||(e[14]=[l("Security")])),_:1,__:[14]})]),e[15]||(e[15]=o("td",null,"Responsible for encrypting messages and and other system data.",-1))])])])])}const M=s(d,[["render",m],["__file","CoreModules.html.vue"]]),p=JSON.parse('{"path":"/Framework/Developer/CoreModules/CoreModules.html","title":"Core Modules","lang":"en-US","frontmatter":{},"git":{"updatedTime":1744933175000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":5}],"changelog":[{"hash":"15ee173564b47688d911d239bf1296182577deca","time":1744933175000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs"},{"hash":"db312309835110752ea2b209f7c3efbf6e7d9264","time":1744758309000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"dev initial commit"},{"hash":"f894df28734323dfee730c0dd29c28fed9ffa424","time":1744056546000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"v0.2.10 Update"},{"hash":"ef0206845170759b186ba757dc6a404bbb00a74b","time":1742593967000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/Developer/CoreModules/CoreModules.md"}');export{M as comp,p as data};
