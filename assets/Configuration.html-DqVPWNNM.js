import{_ as o,c,d as i,a,e as s,b as t,w as l,r as p,o as r}from"./app-WBceOhT5.js";const d={},u={class:"hint-container note"};function m(v,n){const e=p("RouteLink");return r(),c("div",null,[n[6]||(n[6]=i(`<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h1><p>Players can easily configure Mother using the Programmable Block&#39;s <strong>Custom Data</strong>. Where a Module has configuration settings, they will be documented in the module&#39;s section of this documentation.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>Don&#39;t forget to <code>Recompile</code> Mother when you update the Custom Data in the Programmable Block.</p></div><h2 id="programmable-block-running-mother" tabindex="-1"><a class="header-anchor" href="#programmable-block-running-mother"><span>Programmable Block (running Mother)</span></a></h2><div class="code-block-with-title"><div class="code-block-title-bar" data-title="Mother &gt; Custom Data"><span>Mother &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">general</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">debug</span><span class="token punctuation">=</span><span class="token value attr-value">false</span> </span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">security</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">encrypt_messages</span><span class="token punctuation">=</span><span class="token value attr-value">false</span></span>
<span class="line"><span class="token key attr-name">passcodes</span><span class="token punctuation">=</span><span class="token value attr-value">Sup3rSecr3tP@ssw0rd</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Commands</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token comment">; single line command</span></span>
<span class="line"><span class="token key attr-name">hinge0</span><span class="token punctuation">=</span><span class="token value attr-value">hinge/rotate Hinge 0 --speed=2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">; single line routine</span></span>
<span class="line"><span class="token key attr-name">hinge45</span><span class="token punctuation">=</span><span class="token value attr-value">hinge/rotate Hinge 45 --speed=2; rotor/rotate Rotor 20 --speed=1;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">; multi-line routine</span></span>
<span class="line"><span class="token key attr-name">goto-ts-base</span><span class="token punctuation">=</span></span>
<span class="line">| nav/set-flightplan &quot;GPS:TopSecretBase:211.78:-52.93:59.19:#FF75C9F1:&quot;;</span>
<span class="line"><span class="token key attr-name">| fcs/start --speed</span><span class="token punctuation">=</span><span class="token value attr-value">100;</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token comment">; block hooks can be defined within Mother&#39;s Custom Data to trigger events on blocks.  This allows for localized automation of blocks.</span></span>
<span class="line"><span class="token key attr-name">AirlockOuterDoor.onOpen</span><span class="token punctuation">=</span></span>
<span class="line">| light/blink &quot;Airlock Light&quot; fast; </span>
<span class="line">| vent/depressurize AirlockVent; </span>
<span class="line">| wait 10; </span>
<span class="line">| door/close OuterDoor;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="all-blocks" tabindex="-1"><a class="header-anchor" href="#all-blocks"><span>All Blocks</span></a></h2><p>All Terminal Blocks have a <code>Custom Data</code> field. This is where you can define the block&#39;s configuration, tags, and hooks.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="AirlockDoor &gt; Custom Data"><span>AirlockDoor &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">general</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">tags</span><span class="token punctuation">=</span><span class="token value attr-value">airlock,door</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">onOpen</span><span class="token punctuation">=</span></span>
<span class="line">| light/blink &quot;Airlock Light&quot; fast;</span>
<span class="line">| vent/depressurize AirlockVent;</span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">onClose</span><span class="token punctuation">=</span></span>
<span class="line">| vent/pressurize AirlockVent;</span>
<span class="line">| wait 2;</span>
<span class="line">| light/blink &quot;Airlock Light&quot; off;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>Hooks</span></a></h3><p>Hooks can be defined within a block&#39;s Custom Data or within Mother&#39;s Custom Data. They allow Mother to take action when there is a change in state. We can use the <code>this</code> keyword in place of the block name, when we are defining hooks within the block&#39;s Custom Data.</p>`,10)),a("div",u,[n[5]||(n[5]=a("p",{class:"hint-container-title"},"Note",-1)),a("p",null,[n[2]||(n[2]=s("Hooks are defined within Modules where available. See the ")),t(e,{to:"/IngameScript/Modules/Extension/ConnectorModule.html"},{default:l(()=>n[0]||(n[0]=[s("Connector Module")])),_:1}),n[3]||(n[3]=s(", and ")),t(e,{to:"/IngameScript/Modules/Extension/SensorModule.html"},{default:l(()=>n[1]||(n[1]=[s("Sensor Module")])),_:1}),n[4]||(n[4]=s(" for some examples."))])]),n[7]||(n[7]=i(`<p>For when the <code>OuterDoor</code> opens, a light will blink, a vent will depressurize, and the door will close.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="OuterDoor &gt; Custom Data"><span>OuterDoor &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">onOpen</span><span class="token punctuation">=</span></span>
<span class="line">| light/blink &quot;Airlock Light&quot; fast; </span>
<span class="line">| vent/depressurize AirlockVent;</span>
<span class="line">| wait 10; </span>
<span class="line">| door/close this;</span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">onClose</span><span class="token punctuation">=</span></span>
<span class="line">| vent/pressurize AirlockVent; </span>
<span class="line">| wait 2; </span>
<span class="line">| light/blink &quot;Airlock Light&quot; off;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>or, we can define the hook in Mother&#39;s Custom Data:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="OuterDoor &gt; Custom Data"><span>OuterDoor &gt; Custom Data</span></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"></span>
<span class="line"><span class="token key attr-name">\`\`\`ini title</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">Mother &gt; Custom Data</span>&quot;</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">hooks</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">OuterDoor.onOpen</span><span class="token punctuation">=</span></span>
<span class="line">| light/blink &quot;Airlock Light&quot; fast; </span>
<span class="line">| vent/depressurize AirlockVent; </span>
<span class="line">| wait 10; </span>
<span class="line">| door/close OuterDoor;</span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">&quot;Inner Door&quot;.onClose</span><span class="token punctuation">=</span></span>
<span class="line">| vent/pressurize AirlockVent; </span>
<span class="line">| wait 2; </span>
<span class="line">| light/blink &quot;Airlock Light&quot; off;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container note"><p class="hint-container-title">Note</p><p>The pipe character <code>|</code> is used to indicate a new line in the <code>Commands</code> section. This is not required in the Programmable Block terminal but allows us to organize our commands and routines across multiple lines for readibility.</p></div>`,5))])}const b=o(d,[["render",m],["__file","Configuration.html.vue"]]),h=JSON.parse('{"path":"/IngameScript/Configuration.html","title":"Configuration","lang":"en-US","frontmatter":{},"git":{"updatedTime":1744056546000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":4}],"changelog":[{"hash":"f894df28734323dfee730c0dd29c28fed9ffa424","time":1744056546000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"v0.2.10 Update"},{"hash":"ef0206845170759b186ba757dc6a404bbb00a74b","time":1742593967000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs"},{"hash":"c8cf40a8705ec6403d9c49f965678cbd9e3d5f98","time":1742503231000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Update docs for v0.2.8"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"IngameScript/Configuration.md"}');export{b as comp,h as data};
