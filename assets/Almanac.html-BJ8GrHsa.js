import{_ as l,c as r,a as n,d as p,b as e,w as t,e as a,f as c,g as d}from"./app-BvlDxCiZ.js";const u={},m={class:"table-of-contents"};function k(h,s){const o=c("router-link"),i=c("RouteLink");return d(),r("div",null,[s[9]||(s[9]=n("h1",{id:"almanac",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#almanac"},[n("span",null,"Almanac")])],-1)),n("nav",m,[n("ul",null,[n("li",null,[e(o,{to:"#the-unique-identifier"},{default:t(()=>s[0]||(s[0]=[a("The Unique Identifier",-1)])),_:1,__:[0]})]),n("li",null,[e(o,{to:"#records"},{default:t(()=>s[1]||(s[1]=[a("Records",-1)])),_:1,__:[1]}),n("ul",null,[n("li",null,[e(o,{to:"#record-types"},{default:t(()=>s[2]||(s[2]=[a("Record Types",-1)])),_:1,__:[2]})]),n("li",null,[e(o,{to:"#creating-a-record"},{default:t(()=>s[3]||(s[3]=[a("Creating a Record",-1)])),_:1,__:[3]})]),n("li",null,[e(o,{to:"#removing-a-record"},{default:t(()=>s[4]||(s[4]=[a("Removing a Record",-1)])),_:1,__:[4]})]),n("li",null,[e(o,{to:"#storing-records-across-recompiles"},{default:t(()=>s[5]||(s[5]=[a("Storing Records across Recompiles",-1)])),_:1,__:[5]})])])])])]),s[10]||(s[10]=p(`<p>The Almanac manages a list of records that represent entities in the game world. These records can be used to track the location of entities, communicate with them, and display them on map displays.</p><h2 id="the-unique-identifier" tabindex="-1"><a class="header-anchor" href="#the-unique-identifier"><span>The Unique Identifier</span></a></h2><p>Since each instance of Mother is unique to its Programmable Block, we use the programmable block&#39;s <code>EntityId</code> as the unique identifier.</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token comment">// via Mother (recommended)</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">long</span></span> myId <span class="token operator">=</span> Mother<span class="token punctuation">.</span>Id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// or via the Program instance</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">long</span></span> myId <span class="token operator">=</span> Program<span class="token punctuation">.</span>Me<span class="token punctuation">.</span>EntityId<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="records" tabindex="-1"><a class="header-anchor" href="#records"><span>Records</span></a></h2><div class="code-block-with-title"><div class="code-block-title-bar" data-title="DockingModule.cs"><span>DockingModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token comment">// Get a record by a name/nickname</span></span>
<span class="line">AlmanacRecord <span class="token keyword">record</span> <span class="token operator">=</span> Almanac<span class="token punctuation">.</span><span class="token function">GetRecord</span><span class="token punctuation">(</span><span class="token string">&quot;Mothership&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get a record by ID (the EntityId of the programmable block)</span></span>
<span class="line">AlmanacRecord <span class="token keyword">record</span> <span class="token operator">=</span> Almanac<span class="token punctuation">.</span><span class="token function">GetRecord</span><span class="token punctuation">(</span><span class="token number">12345678901234567890</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>Mother passes the current grids name with every request and this is used as the default <strong>nickname</strong> of the record.</p></div><h3 id="record-types" tabindex="-1"><a class="header-anchor" href="#record-types"><span>Record Types</span></a></h3><p>The almanac currently supports the following Entity types:</p><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><strong>grid</strong></td><td>Represents a grid in the game world, such as a ship or station.</td></tr><tr><td><strong>waypoint</strong></td><td>Represents a GPS waypoint in the game world.</td></tr><tr><td><strong>local</strong></td><td>Represents another instance of Mother running on the same grid.</td></tr></tbody></table><h3 id="creating-a-record" tabindex="-1"><a class="header-anchor" href="#creating-a-record"><span>Creating a Record</span></a></h3><div class="code-block-with-title"><div class="code-block-title-bar" data-title="DockingModule.cs"><span>DockingModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token comment">// Create record</span></span>
<span class="line">TopSecretBase <span class="token keyword">record</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AlmanacRecord</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;TopSecretBase&quot;</span><span class="token punctuation">,</span>                            <span class="token comment">// name</span></span>
<span class="line">    <span class="token string">&quot;grid&quot;</span><span class="token punctuation">,</span>                                     <span class="token comment">// entity type</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3D</span><span class="token punctuation">(</span><span class="token number">1234.23</span><span class="token punctuation">,</span> <span class="token number">5678.72</span><span class="token punctuation">,</span> <span class="token number">24155.22</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token comment">// position</span></span>
<span class="line">    <span class="token number">0</span>                                           <span class="token comment">// speed (optional)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Add to the almanac</span></span>
<span class="line">Mother<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Almanac<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddRecord</span><span class="token punctuation">(</span><span class="token keyword">record</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>When records are added to the Almanac, they will automatically appear on map displays and be accessible for remote communication. Mother adds and updates records frequently via communications.</p><h3 id="removing-a-record" tabindex="-1"><a class="header-anchor" href="#removing-a-record"><span>Removing a Record</span></a></h3><p>To remove a record, you can simply access the <code>Records</code> list and remove the record you want to delete.</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="DockingModule.cs"><span>DockingModule.cs</span></div><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token comment">// Get the record</span></span>
<span class="line">AlmanacRecord <span class="token keyword">record</span> <span class="token operator">=</span> Almanac<span class="token punctuation">.</span><span class="token function">GetRecord</span><span class="token punctuation">(</span><span class="token string">&quot;Mothership&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Remove the record from the almanac</span></span>
<span class="line">Almanac<span class="token punctuation">.</span>Records<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span><span class="token keyword">record</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="storing-records-across-recompiles" tabindex="-1"><a class="header-anchor" href="#storing-records-across-recompiles"><span>Storing Records across Recompiles</span></a></h3>`,17)),n("p",null,[s[7]||(s[7]=a("When a programmable block recompiles, scripts are reloaded and all state is lost by default. To prevent this, the Almanac stores records in ",-1)),e(i,{to:"/Framework/Developer/CoreModules/LocalStorage.html"},{default:t(()=>s[6]||(s[6]=[a("Local Storage",-1)])),_:1,__:[6]}),s[8]||(s[8]=a(" to make it accessible after recompile or a reboot.",-1))])])}const g=l(u,[["render",k]]),b=JSON.parse('{"path":"/Framework/Developer/CoreModules/Almanac.html","title":"Almanac","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754690910000,"contributors":[{"name":"Luke Morrison","username":"","email":"lukejamesmorrison@gmail.com","commits":2},{"name":"lukejamesmorrison","username":"lukejamesmorrison","email":"30843159+lukejamesmorrison@users.noreply.github.com","commits":3,"url":"https://github.com/lukejamesmorrison"}],"changelog":[{"hash":"effd9d96219e3b940efebaae7ff63d6eda576759","time":1754690910000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Major update to Core pages"},{"hash":"45c719ddd7d0ab590376c4296af561cba3f201d2","time":1754520614000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Improve Core documentation and update animations on home page"},{"hash":"656cfacdf436e6faca234cf77b83f77ed2c9c8d2","time":1751234971000,"email":"30843159+lukejamesmorrison@users.noreply.github.com","author":"Luke","message":"Finish first draft of framework documentation"},{"hash":"f894df28734323dfee730c0dd29c28fed9ffa424","time":1744056546000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"v0.2.10 Update"},{"hash":"7c2fb0716f1b3a7b9765a5e6872cb915206257b5","time":1742428082000,"email":"lukejamesmorrison@gmail.com","author":"Luke Morrison","message":"Initial commit"}]},"filePathRelative":"Framework/Developer/CoreModules/Almanac.md"}');export{g as comp,b as data};
